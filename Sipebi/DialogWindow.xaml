<Window x:Class="Sipebi.DialogWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sipebi"
        xmlns:core="clr-namespace:Sipebi.Core;assembly=Sipebi.Core"
        mc:Ignorable="d"
        WindowStyle="None" 
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        Icon="Images/Logo/icon_refined.png"
        MinWidth="{Binding WindowMinimumWidth}"
        MinHeight="{Binding WindowMinimumHeight}"
        Title="{Binding Title}">
  
  <Window.Resources>
    <!-- To replace the default template of the window-->
    <Style TargetType="{x:Type local:DialogWindow}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}">
            <!-- Give border(s) to the custom window-->
            <!-- FallbackValue is default value when the default value is not found-->
            <!-- Outer border with dropshadow margin-->
            <Border Background="Transparent" 
                    Padding="{Binding OuterMarginSizeThickness, FallbackValue=10}">
              <!-- Main window outline-->
              <Grid>
                <!-- Opacity mask for corners on grid-->
                <Border x:Name="Container"
                        Background="{StaticResource BackgroundLightBrush}"
                        CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}"/>

                <!-- Window border and dropshadow-->
                <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}"
                      Background="{Binding ForegroundLightBrush, FallbackValue=White}">
                  <Border.Effect>
                    <!-- ShadowDepth = distance from centre-->
                    <DropShadowEffect ShadowDepth="0" Opacity="0.2"/>
                  </Border.Effect>
                </Border>

                <!-- The main window content-->
                <Grid>
                  <!-- Corner clipping-->
                  <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=Container}"/>
                  </Grid.OpacityMask>

                  <Grid.RowDefinitions>
                    <!-- Title Bar-->
                    <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=42}"/>

                    <!-- Window content-->
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>

                  <!-- Title bar-->
                  <!-- we put Panel.ZIndex="1" to bring out the grid to the foreground so that we can click the grid-->
                  <Grid Grid.Column="0" Panel.ZIndex="1">
                    <Grid.ColumnDefinitions>
                      <!-- For the top-leftmost icon-->
                      <ColumnDefinition Width="Auto"/>
                      <!-- Title -->
                      <ColumnDefinition Width="*"/>
                      <!-- Window Button(s)-->
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Icon -->
                    <!-- The binding is to retain the default function of the icon in the windows-->
                    <Button Style="{StaticResource SystemIconButton}" Command="{Binding MenuCommand}">
                      <Image Source="/Images/Logo/icon_refined2.png"/>
                    </Button>

                    <!-- Title-->
                    <TextBlock Grid.Column="1"
                               Text="{Binding Title}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               FontSize="{StaticResource FontSizeLarge}"
                               FontFamily="{StaticResource LatoRegular}"
                               Foreground="{StaticResource ForegroundVeryDarkBrush}"
                               />

                    <!-- Window Buttons-->
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                      <Button Command="{Binding MinimizeCommand}" 
                              Style="{StaticResource WindowControlButton}" 
                              Visibility="Collapsed"
                              Content="_"/>
                      <Button Command="{Binding MaximizeCommand}" 
                              Style="{StaticResource WindowControlButton}" 
                              Visibility="Collapsed"
                              Content="[]"/>
                      <Button Command="{Binding CloseCommand}" 
                              Style="{StaticResource WindowCloseButton}" 
                              Content="X"/>
                    </StackPanel>
                  </Grid>
                  
                  <!-- Page content-->
                  <!-- Now we are going to get rid of the red-not-rounded corner issue when close button is mouse-hovered -->
                  <Border Grid.Row="1" Padding="{Binding InnerContentPadding}"
                          ClipToBounds="True">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                  </Border>
                </Grid>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  
  <WindowChrome.WindowChrome>
    <!-- To set up the name of this class does (??) it means, make the custom window resizable, draggable, etc-->
    <WindowChrome 
      ResizeBorderThickness="{Binding ResizeBorderThickness}"
      CaptionHeight="{Binding TitleHeight}"
      CornerRadius="0"
      GlassFrameThickness="0"
      />
    <!-- Glass frame is to show very thin blue box surrounding the window. Setting it to 0 means we does not want it.-->
  </WindowChrome.WindowChrome>
  
  <Border Background="{StaticResource ForegroundLightBrush}"
          Padding="10"
          >
    <ContentControl Content="{Binding Content}"/>
  </Border>
</Window>
